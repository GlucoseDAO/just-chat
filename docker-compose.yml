services:
  just-chat-ui-agents:
    container_name: just-chat-ui-agents
    image: ghcr.io/longevity-genie/just-agents/chat-ui-agents:main
    environment:
      APP_PORT: "8089" #app port inside container
      APP_HOST: "0.0.0.0" #app host inside container, 0's to expose
      AGENT_PORT: "8089" #agent port for chat to access
      AGENT_HOST: "http://just-chat-ui-agents" #agent host for chat to access
      #AGENT_WORKERS: "4"
      AGENT_TITLE: "Just Chat-UI REST API node"
      AGENT_PARENT_SECTION: "agent_profiles"
      AGENT_DEBUG: "false"
      AGENT_REMOVE_SYSTEM_PROMPT: "false"
      AGENT_CONFIG_PATH: "/app/chat_agent_profiles.yaml"
      USER_ID: ${USER_ID:-${UID}}
      GROUP_ID: ${GROUP_ID:-${GID}}
      MODELS_DIR: "/app/models.d"
      ENV_KEYS_PATH: "/app/env/.env.keys"
      ENV_MODELS_PATH: "/app/env/.env.local"
      AGENT_FAILFAST: "true"
      #REMOVE_DD_CONFIGS: "true"
      #TRAP_CHAT_NAMES: "true"
      #JSON_FILE_PATTERN: "[0123456789][0123456789]_*.json"
      #AGENT_SECTION: "" # for one agent
      #PYTHONPATH: "/app"
    ports:
      - "127.0.0.1:8089:8089"
    #entrypoint: [ "/usr/local/bin/entrypoint.sh" ]
    #command: ["python", "-m", "just_agents.web.run_agent", "run-chat-ui-server-command"]
    healthcheck:
      test: ["CMD-SHELL", "curl -s 0.0.0.0:8089 | grep -q REST && test -f ./env/.env.local"]
      interval: 15s
      retries: 10
      start_period: 15s
      timeout: 1s
    volumes:
    #  - "./scripts/replacement_entrypoint.sh:/usr/local/bin/entrypoint.sh"
      - "./scripts/init_env.py:/app/init.py"
      - "./data:/data"
      - "./env:/app/env"
      - "./logs:/app/logs"
      - "./scripts:/app/scripts"
      - "./agent_tools:/app/agent_tools"
      - "./chat_agent_profiles.yaml:/app/chat_agent_profiles.yaml"
    restart: on-failure:3

  huggingchat-ui:
    container_name: just-chat-ui-for-agents
    image: ghcr.io/longevity-genie/chat-ui/chat-ui:sha-325df57
    environment:
      ALLOW_INSECURE_COOKIES: "true"
      INCLUDE_DB: "False"
    volumes:
      - "./env/.env.local:/app/.env.local"
    ports:
      - "0.0.0.0:3000:3000"
    depends_on:
      just-chat-ui-agents:
        condition: service_healthy
      chat-mongo:
        condition: service_started
    restart: unless-stopped

  chat-mongo:
    container_name: just-chat-mongodb-for-agents
    image: docker.io/library/mongo:latest
    restart: always
    env_file:
      - ./env/.env.mongo
    ports:
      - "27017"
    volumes:
      - "mongo-data:/data/db"
    #  - "./volumes/mongo/db:/data/db"
    depends_on:
      just-chat-ui-agents:
        condition: service_healthy

  meilisearch: #container required for searching the papers
    container_name: meilisearch
    image: getmeili/meilisearch:v1.13.0-rc.1 # we have to use it because migration got easier
    environment:
      - http_proxy
      - https_proxy
      - MEILI_MASTER_KEY=fancy_master_key
      - MEILI_NO_ANALYTICS=${MEILI_NO_ANALYTICS:-true}
      - MEILI_ENV=${MEILI_ENV:-development}
      - MEILI_LOG_LEVEL
      - MEILI_DB_PATH=${MEILI_DB_PATH:-/data.ms}
      - MEILI_EXPERIMENTAL_ENABLE_METRICS=true
      - MEILI_EXPERIMENTAL_ENABLE_VECTORS=true
    ports:
      - ${MEILI_PORT:-7700}:7700
    volumes:
      - ./data.ms:/data.ms
    restart: unless-stopped

networks:
  default:
    name: chat-server-for-agents
